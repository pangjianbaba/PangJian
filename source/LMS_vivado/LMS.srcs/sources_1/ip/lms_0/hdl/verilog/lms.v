// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lms,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z007sclg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=35.509000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=24,HLS_SYN_FF=556,HLS_SYN_LUT=105,HLS_VERSION=2018_3}" *)

module lms (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_V,
        y_V_ap_vld,
        xn_V,
        dn_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] y_V;
output   y_V_ap_vld;
input  [13:0] xn_V;
input  [13:0] dn_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg y_V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg  signed [13:0] xk_V_14;
reg  signed [13:0] xk_V_13;
reg  signed [13:0] xk_V_12;
reg  signed [13:0] xk_V_11;
reg  signed [13:0] xk_V_10;
reg  signed [13:0] xk_V_9;
reg  signed [13:0] xk_V_8;
reg  signed [13:0] xk_V_7;
reg  signed [13:0] xk_V_6;
reg  signed [13:0] xk_V_5;
reg  signed [13:0] xk_V_4;
reg  signed [13:0] xk_V_3;
reg  signed [13:0] xk_V_2;
reg  signed [13:0] xk_V_1;
reg  signed [13:0] xk_V_0;
reg  signed [15:0] wk_V_0;
reg  signed [15:0] wk_V_1;
reg  signed [15:0] wk_V_2;
reg  signed [15:0] wk_V_3;
reg  signed [15:0] wk_V_4;
reg  signed [15:0] wk_V_5;
reg  signed [15:0] wk_V_6;
reg  signed [15:0] wk_V_7;
reg   [15:0] wk_V_8;
reg   [15:0] wk_V_9;
reg   [15:0] wk_V_10;
reg   [15:0] wk_V_11;
reg   [15:0] wk_V_12;
reg   [15:0] wk_V_13;
reg   [15:0] wk_V_14;
reg   [15:0] wk_V_15;
reg  signed [13:0] xk_V_6_load_reg_1291;
wire  signed [29:0] r_V_5_7_i_fu_1148_p2;
reg  signed [29:0] r_V_5_7_i_reg_1296;
reg   [12:0] tmp_11_reg_1301;
wire  signed [33:0] r_V_1_cast_fu_504_p1;
reg  signed [33:0] r_V_1_cast_reg_1306;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_01001;
wire  signed [29:0] r_V_5_i_fu_1086_p2;
wire   [11:0] tmp_fu_271_p4;
wire  signed [29:0] lhs_V_3_1_i_fu_280_p3;
wire  signed [30:0] grp_fu_1093_p3;
wire   [12:0] tmp_3_fu_292_p4;
wire  signed [30:0] tmp_1_fu_309_p3;
wire  signed [31:0] grp_fu_1102_p3;
wire   [13:0] tmp_2_fu_329_p4;
wire  signed [31:0] grp_fu_1111_p3;
wire   [13:0] tmp_4_fu_354_p4;
wire  signed [31:0] grp_fu_1120_p3;
wire   [13:0] tmp_5_fu_379_p4;
wire  signed [31:0] grp_fu_1129_p3;
wire   [13:0] tmp_9_fu_404_p4;
wire  signed [31:0] grp_fu_1138_p3;
wire   [13:0] tmp_10_fu_429_p4;
wire   [31:0] lhs_V_3_7_i_fu_438_p3;
wire  signed [31:0] rhs_V_7_i_cast_fu_446_p1;
wire   [31:0] ret_V_7_i_fu_458_p2;
wire   [13:0] tmp_12_fu_468_p4;
wire   [15:0] rhs_V_fu_478_p3;
wire  signed [16:0] lhs_V_fu_464_p1;
wire  signed [16:0] rhs_V_1_cast_fu_486_p1;
wire   [16:0] ret_V_fu_490_p2;
wire   [19:0] r_V_fu_496_p3;
wire  signed [15:0] lhs_V_2_fu_512_p1;
wire  signed [35:0] grp_fu_1155_p3;
wire  signed [15:0] lhs_V_2_1_fu_539_p1;
wire  signed [35:0] grp_fu_1164_p3;
wire  signed [15:0] lhs_V_2_2_fu_566_p1;
wire  signed [35:0] grp_fu_1173_p3;
wire  signed [15:0] lhs_V_2_3_fu_593_p1;
wire  signed [35:0] grp_fu_1182_p3;
wire  signed [15:0] lhs_V_2_4_fu_620_p1;
wire  signed [35:0] grp_fu_1191_p3;
wire  signed [15:0] lhs_V_2_5_fu_647_p1;
wire  signed [35:0] grp_fu_1200_p3;
wire  signed [15:0] lhs_V_2_6_fu_674_p1;
wire  signed [35:0] grp_fu_1209_p3;
wire  signed [15:0] lhs_V_2_7_fu_701_p1;
wire  signed [35:0] grp_fu_1218_p3;
wire  signed [30:0] tmp_7_fu_803_p1;
wire   [30:0] tmp_8_fu_806_p3;
wire  signed [35:0] grp_fu_1227_p3;
wire  signed [35:0] grp_fu_1235_p3;
wire  signed [35:0] grp_fu_1243_p3;
wire  signed [35:0] grp_fu_1251_p3;
wire  signed [35:0] grp_fu_1259_p3;
wire  signed [35:0] grp_fu_1267_p3;
wire  signed [35:0] grp_fu_1275_p3;
wire  signed [35:0] grp_fu_1283_p3;
wire   [30:0] ret_V_7_i_cast_fu_813_p2;
wire   [12:0] tmp_13_fu_1067_p4;
wire   [31:0] grp_fu_1111_p2;
wire   [31:0] grp_fu_1120_p2;
wire   [31:0] grp_fu_1129_p2;
wire   [31:0] grp_fu_1138_p2;
wire  signed [19:0] grp_fu_1155_p0;
wire   [35:0] grp_fu_1155_p2;
wire  signed [19:0] grp_fu_1164_p0;
wire   [35:0] grp_fu_1164_p2;
wire  signed [19:0] grp_fu_1173_p0;
wire   [35:0] grp_fu_1173_p2;
wire  signed [19:0] grp_fu_1182_p0;
wire   [35:0] grp_fu_1182_p2;
wire  signed [19:0] grp_fu_1191_p0;
wire   [35:0] grp_fu_1191_p2;
wire  signed [19:0] grp_fu_1200_p0;
wire   [35:0] grp_fu_1200_p2;
wire  signed [19:0] grp_fu_1209_p0;
wire   [35:0] grp_fu_1209_p2;
wire  signed [19:0] grp_fu_1218_p0;
wire   [35:0] grp_fu_1218_p2;
wire  signed [19:0] grp_fu_1227_p0;
wire   [35:0] grp_fu_1227_p2;
wire  signed [19:0] grp_fu_1235_p0;
wire   [35:0] grp_fu_1235_p2;
wire  signed [19:0] grp_fu_1243_p0;
wire   [35:0] grp_fu_1243_p2;
wire  signed [19:0] grp_fu_1251_p0;
wire   [35:0] grp_fu_1251_p2;
wire  signed [19:0] grp_fu_1259_p0;
wire   [35:0] grp_fu_1259_p2;
wire  signed [19:0] grp_fu_1267_p0;
wire   [35:0] grp_fu_1267_p2;
wire  signed [19:0] grp_fu_1275_p0;
wire   [35:0] grp_fu_1275_p2;
wire  signed [19:0] grp_fu_1283_p0;
wire   [35:0] grp_fu_1283_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 xk_V_14 = 14'd0;
#0 xk_V_13 = 14'd0;
#0 xk_V_12 = 14'd0;
#0 xk_V_11 = 14'd0;
#0 xk_V_10 = 14'd0;
#0 xk_V_9 = 14'd0;
#0 xk_V_8 = 14'd0;
#0 xk_V_7 = 14'd0;
#0 xk_V_6 = 14'd0;
#0 xk_V_5 = 14'd0;
#0 xk_V_4 = 14'd0;
#0 xk_V_3 = 14'd0;
#0 xk_V_2 = 14'd0;
#0 xk_V_1 = 14'd0;
#0 xk_V_0 = 14'd0;
#0 wk_V_0 = 16'd0;
#0 wk_V_1 = 16'd0;
#0 wk_V_2 = 16'd0;
#0 wk_V_3 = 16'd0;
#0 wk_V_4 = 16'd0;
#0 wk_V_5 = 16'd0;
#0 wk_V_6 = 16'd0;
#0 wk_V_7 = 16'd0;
#0 wk_V_8 = 16'd0;
#0 wk_V_9 = 16'd0;
#0 wk_V_10 = 16'd0;
#0 wk_V_11 = 16'd0;
#0 wk_V_12 = 16'd0;
#0 wk_V_13 = 16'd0;
#0 wk_V_14 = 16'd0;
#0 wk_V_15 = 16'd0;
end

lms_mul_mul_16s_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
lms_mul_mul_16s_1bkb_U1(
    .din0(wk_V_0),
    .din1(xn_V),
    .dout(r_V_5_i_fu_1086_p2)
);

lms_mac_muladd_16cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 30 ),
    .dout_WIDTH( 31 ))
lms_mac_muladd_16cud_U2(
    .din0(wk_V_1),
    .din1(xk_V_0),
    .din2(lhs_V_3_1_i_fu_280_p3),
    .dout(grp_fu_1093_p3)
);

lms_mac_muladd_16dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 32 ))
lms_mac_muladd_16dEe_U3(
    .din0(wk_V_2),
    .din1(xk_V_1),
    .din2(tmp_1_fu_309_p3),
    .dout(grp_fu_1102_p3)
);

lms_mac_muladd_16eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lms_mac_muladd_16eOg_U4(
    .din0(wk_V_3),
    .din1(xk_V_2),
    .din2(grp_fu_1111_p2),
    .dout(grp_fu_1111_p3)
);

lms_mac_muladd_16eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lms_mac_muladd_16eOg_U5(
    .din0(wk_V_4),
    .din1(xk_V_3),
    .din2(grp_fu_1120_p2),
    .dout(grp_fu_1120_p3)
);

lms_mac_muladd_16eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lms_mac_muladd_16eOg_U6(
    .din0(wk_V_5),
    .din1(xk_V_4),
    .din2(grp_fu_1129_p2),
    .dout(grp_fu_1129_p3)
);

lms_mac_muladd_16eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lms_mac_muladd_16eOg_U7(
    .din0(wk_V_6),
    .din1(xk_V_5),
    .din2(grp_fu_1138_p2),
    .dout(grp_fu_1138_p3)
);

lms_mul_mul_16s_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
lms_mul_mul_16s_1bkb_U8(
    .din0(wk_V_7),
    .din1(xk_V_6),
    .dout(r_V_5_7_i_fu_1148_p2)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U9(
    .din0(grp_fu_1155_p0),
    .din1(xn_V),
    .din2(grp_fu_1155_p2),
    .dout(grp_fu_1155_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U10(
    .din0(grp_fu_1164_p0),
    .din1(xk_V_0),
    .din2(grp_fu_1164_p2),
    .dout(grp_fu_1164_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U11(
    .din0(grp_fu_1173_p0),
    .din1(xk_V_1),
    .din2(grp_fu_1173_p2),
    .dout(grp_fu_1173_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U12(
    .din0(grp_fu_1182_p0),
    .din1(xk_V_2),
    .din2(grp_fu_1182_p2),
    .dout(grp_fu_1182_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U13(
    .din0(grp_fu_1191_p0),
    .din1(xk_V_3),
    .din2(grp_fu_1191_p2),
    .dout(grp_fu_1191_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U14(
    .din0(grp_fu_1200_p0),
    .din1(xk_V_4),
    .din2(grp_fu_1200_p2),
    .dout(grp_fu_1200_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U15(
    .din0(grp_fu_1209_p0),
    .din1(xk_V_5),
    .din2(grp_fu_1209_p2),
    .dout(grp_fu_1209_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U16(
    .din0(grp_fu_1218_p0),
    .din1(xk_V_6),
    .din2(grp_fu_1218_p2),
    .dout(grp_fu_1218_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U17(
    .din0(grp_fu_1227_p0),
    .din1(xk_V_7),
    .din2(grp_fu_1227_p2),
    .dout(grp_fu_1227_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U18(
    .din0(grp_fu_1235_p0),
    .din1(xk_V_8),
    .din2(grp_fu_1235_p2),
    .dout(grp_fu_1235_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U19(
    .din0(grp_fu_1243_p0),
    .din1(xk_V_9),
    .din2(grp_fu_1243_p2),
    .dout(grp_fu_1243_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U20(
    .din0(grp_fu_1251_p0),
    .din1(xk_V_10),
    .din2(grp_fu_1251_p2),
    .dout(grp_fu_1251_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U21(
    .din0(grp_fu_1259_p0),
    .din1(xk_V_11),
    .din2(grp_fu_1259_p2),
    .dout(grp_fu_1259_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U22(
    .din0(grp_fu_1267_p0),
    .din1(xk_V_12),
    .din2(grp_fu_1267_p2),
    .dout(grp_fu_1267_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U23(
    .din0(grp_fu_1275_p0),
    .din1(xk_V_13),
    .din2(grp_fu_1275_p2),
    .dout(grp_fu_1275_p3)
);

lms_mac_muladd_20fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 36 ),
    .dout_WIDTH( 36 ))
lms_mac_muladd_20fYi_U24(
    .din0(grp_fu_1283_p0),
    .din1(xk_V_14),
    .din2(grp_fu_1283_p2),
    .dout(grp_fu_1283_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_V_1_cast_reg_1306[33 : 3] <= r_V_1_cast_fu_504_p1[33 : 3];
        r_V_5_7_i_reg_1296 <= r_V_5_7_i_fu_1148_p2;
        tmp_11_reg_1301 <= {{grp_fu_1138_p3[30:18]}};
        xk_V_6_load_reg_1291 <= xk_V_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wk_V_0 <= {{grp_fu_1155_p3[35:20]}};
        wk_V_1 <= {{grp_fu_1164_p3[35:20]}};
        wk_V_2 <= {{grp_fu_1173_p3[35:20]}};
        wk_V_3 <= {{grp_fu_1182_p3[35:20]}};
        wk_V_4 <= {{grp_fu_1191_p3[35:20]}};
        wk_V_5 <= {{grp_fu_1200_p3[35:20]}};
        wk_V_6 <= {{grp_fu_1209_p3[35:20]}};
        wk_V_7 <= {{grp_fu_1218_p3[35:20]}};
        xk_V_0 <= xn_V;
        xk_V_1 <= xk_V_0;
        xk_V_2 <= xk_V_1;
        xk_V_3 <= xk_V_2;
        xk_V_4 <= xk_V_3;
        xk_V_5 <= xk_V_4;
        xk_V_6 <= xk_V_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wk_V_10 <= {{grp_fu_1243_p3[35:20]}};
        wk_V_11 <= {{grp_fu_1251_p3[35:20]}};
        wk_V_12 <= {{grp_fu_1259_p3[35:20]}};
        wk_V_13 <= {{grp_fu_1267_p3[35:20]}};
        wk_V_14 <= {{grp_fu_1275_p3[35:20]}};
        wk_V_15 <= {{grp_fu_1283_p3[35:20]}};
        wk_V_8 <= {{grp_fu_1227_p3[35:20]}};
        wk_V_9 <= {{grp_fu_1235_p3[35:20]}};
        xk_V_10 <= xk_V_9;
        xk_V_11 <= xk_V_10;
        xk_V_12 <= xk_V_11;
        xk_V_13 <= xk_V_12;
        xk_V_14 <= xk_V_13;
        xk_V_7 <= xk_V_6_load_reg_1291;
        xk_V_8 <= xk_V_7;
        xk_V_9 <= xk_V_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_V_ap_vld = 1'b1;
    end else begin
        y_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_1111_p2 = {{tmp_2_fu_329_p4}, {18'd0}};

assign grp_fu_1120_p2 = {{tmp_4_fu_354_p4}, {18'd0}};

assign grp_fu_1129_p2 = {{tmp_5_fu_379_p4}, {18'd0}};

assign grp_fu_1138_p2 = {{tmp_9_fu_404_p4}, {18'd0}};

assign grp_fu_1155_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1155_p2 = {{lhs_V_2_fu_512_p1}, {20'd0}};

assign grp_fu_1164_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1164_p2 = {{lhs_V_2_1_fu_539_p1}, {20'd0}};

assign grp_fu_1173_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1173_p2 = {{lhs_V_2_2_fu_566_p1}, {20'd0}};

assign grp_fu_1182_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1182_p2 = {{lhs_V_2_3_fu_593_p1}, {20'd0}};

assign grp_fu_1191_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1191_p2 = {{lhs_V_2_4_fu_620_p1}, {20'd0}};

assign grp_fu_1200_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1200_p2 = {{lhs_V_2_5_fu_647_p1}, {20'd0}};

assign grp_fu_1209_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1209_p2 = {{lhs_V_2_6_fu_674_p1}, {20'd0}};

assign grp_fu_1218_p0 = r_V_1_cast_fu_504_p1;

assign grp_fu_1218_p2 = {{lhs_V_2_7_fu_701_p1}, {20'd0}};

assign grp_fu_1227_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1227_p2 = {{wk_V_8}, {20'd0}};

assign grp_fu_1235_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1235_p2 = {{wk_V_9}, {20'd0}};

assign grp_fu_1243_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1243_p2 = {{wk_V_10}, {20'd0}};

assign grp_fu_1251_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1251_p2 = {{wk_V_11}, {20'd0}};

assign grp_fu_1259_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1259_p2 = {{wk_V_12}, {20'd0}};

assign grp_fu_1267_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1267_p2 = {{wk_V_13}, {20'd0}};

assign grp_fu_1275_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1275_p2 = {{wk_V_14}, {20'd0}};

assign grp_fu_1283_p0 = r_V_1_cast_reg_1306;

assign grp_fu_1283_p2 = {{wk_V_15}, {20'd0}};

assign lhs_V_2_1_fu_539_p1 = wk_V_1;

assign lhs_V_2_2_fu_566_p1 = wk_V_2;

assign lhs_V_2_3_fu_593_p1 = wk_V_3;

assign lhs_V_2_4_fu_620_p1 = wk_V_4;

assign lhs_V_2_5_fu_647_p1 = wk_V_5;

assign lhs_V_2_6_fu_674_p1 = wk_V_6;

assign lhs_V_2_7_fu_701_p1 = wk_V_7;

assign lhs_V_2_fu_512_p1 = wk_V_0;

assign lhs_V_3_1_i_fu_280_p3 = {{tmp_fu_271_p4}, {18'd0}};

assign lhs_V_3_7_i_fu_438_p3 = {{tmp_10_fu_429_p4}, {18'd0}};

assign lhs_V_fu_464_p1 = $signed(dn_V);

assign r_V_1_cast_fu_504_p1 = $signed(r_V_fu_496_p3);

assign r_V_fu_496_p3 = {{ret_V_fu_490_p2}, {3'd0}};

assign ret_V_7_i_cast_fu_813_p2 = ($signed(tmp_7_fu_803_p1) + $signed(tmp_8_fu_806_p3));

assign ret_V_7_i_fu_458_p2 = ($signed(lhs_V_3_7_i_fu_438_p3) + $signed(rhs_V_7_i_cast_fu_446_p1));

assign ret_V_fu_490_p2 = ($signed(lhs_V_fu_464_p1) - $signed(rhs_V_1_cast_fu_486_p1));

assign rhs_V_1_cast_fu_486_p1 = $signed(rhs_V_fu_478_p3);

assign rhs_V_7_i_cast_fu_446_p1 = r_V_5_7_i_fu_1148_p2;

assign rhs_V_fu_478_p3 = {{tmp_12_fu_468_p4}, {2'd0}};

assign tmp_10_fu_429_p4 = {{grp_fu_1138_p3[31:18]}};

assign tmp_12_fu_468_p4 = {{ret_V_7_i_fu_458_p2[31:18]}};

assign tmp_13_fu_1067_p4 = {{ret_V_7_i_cast_fu_813_p2[30:18]}};

assign tmp_1_fu_309_p3 = {{tmp_3_fu_292_p4}, {18'd0}};

assign tmp_2_fu_329_p4 = {{grp_fu_1102_p3[31:18]}};

assign tmp_3_fu_292_p4 = {{grp_fu_1093_p3[30:18]}};

assign tmp_4_fu_354_p4 = {{grp_fu_1111_p3[31:18]}};

assign tmp_5_fu_379_p4 = {{grp_fu_1120_p3[31:18]}};

assign tmp_7_fu_803_p1 = r_V_5_7_i_reg_1296;

assign tmp_8_fu_806_p3 = {{tmp_11_reg_1301}, {18'd0}};

assign tmp_9_fu_404_p4 = {{grp_fu_1129_p3[31:18]}};

assign tmp_fu_271_p4 = {{r_V_5_i_fu_1086_p2[29:18]}};

assign y_V = {{tmp_13_fu_1067_p4}, {1'd0}};

always @ (posedge ap_clk) begin
    r_V_1_cast_reg_1306[2:0] <= 3'b000;
end

endmodule //lms
