-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lms is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_V : OUT STD_LOGIC_VECTOR (13 downto 0);
    y_V_ap_vld : OUT STD_LOGIC;
    xn_V : IN STD_LOGIC_VECTOR (13 downto 0);
    dn_V : IN STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of lms is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lms,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z007sclg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=35.509000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=40,HLS_SYN_FF=1036,HLS_SYN_LUT=105,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal xk_V_30 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_29 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_28 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_27 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_26 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_25 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_24 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_23 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_22 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_21 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_20 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_18 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_16 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_15 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_14 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_12 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_11 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_10 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_9 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal xk_V_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal wk_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal wk_V_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal xk_V_6_load_reg_2139 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_5_7_i_fu_1868_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_5_7_i_reg_2144 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_11_reg_2149 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_1_cast_fu_568_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_1_cast_reg_2154 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_5_i_fu_1806_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_335_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal lhs_V_3_1_i_fu_344_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1813_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_356_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_373_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_393_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_418_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1840_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_443_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_468_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1858_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_493_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_3_7_i_fu_502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_7_i_cast_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_7_i_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_532_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal rhs_V_fu_542_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_528_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_1_cast_fu_550_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_554_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_560_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal lhs_V_2_fu_576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1875_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_1_fu_603_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1884_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_2_fu_630_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1893_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_3_fu_657_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1902_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_4_fu_684_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1911_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_5_fu_711_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1920_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_6_fu_738_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1929_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_2_7_fu_765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1938_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_7_fu_1027_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_fu_1030_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1947_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1955_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1963_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1971_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1979_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1987_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1995_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2003_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2011_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2019_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2027_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2035_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2043_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2051_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2059_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2067_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2075_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2083_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2091_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2099_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2107_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2115_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2123_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2131_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_7_i_cast_fu_1037_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_13_fu_1787_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1840_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1858_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1875_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1875_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1884_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1884_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1893_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1893_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1902_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1902_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1911_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1911_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1920_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1920_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1929_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1929_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1938_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1938_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1947_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1947_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1955_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1955_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1963_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1963_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1971_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1971_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1979_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1979_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1987_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1987_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_1995_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1995_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2003_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2003_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2011_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2011_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2019_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2019_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2027_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2027_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2035_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2035_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2043_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2043_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2051_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2051_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2059_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2059_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2067_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2067_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2075_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2075_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2083_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2083_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2091_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2091_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2099_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2099_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2107_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2107_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2115_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2115_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2123_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2123_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_2131_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_2131_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component lms_mul_mul_16s_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component lms_mac_muladd_16cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component lms_mac_muladd_16dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lms_mac_muladd_16eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lms_mac_muladd_20fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        din2 : IN STD_LOGIC_VECTOR (35 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    lms_mul_mul_16s_1bkb_U1 : component lms_mul_mul_16s_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        din0 => wk_V_0,
        din1 => xn_V,
        dout => r_V_5_i_fu_1806_p2);

    lms_mac_muladd_16cud_U2 : component lms_mac_muladd_16cud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 30,
        dout_WIDTH => 31)
    port map (
        din0 => wk_V_1,
        din1 => xk_V_0,
        din2 => lhs_V_3_1_i_fu_344_p3,
        dout => grp_fu_1813_p3);

    lms_mac_muladd_16dEe_U3 : component lms_mac_muladd_16dEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => wk_V_2,
        din1 => xk_V_1,
        din2 => tmp_1_fu_373_p3,
        dout => grp_fu_1822_p3);

    lms_mac_muladd_16eOg_U4 : component lms_mac_muladd_16eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => wk_V_3,
        din1 => xk_V_2,
        din2 => grp_fu_1831_p2,
        dout => grp_fu_1831_p3);

    lms_mac_muladd_16eOg_U5 : component lms_mac_muladd_16eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => wk_V_4,
        din1 => xk_V_3,
        din2 => grp_fu_1840_p2,
        dout => grp_fu_1840_p3);

    lms_mac_muladd_16eOg_U6 : component lms_mac_muladd_16eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => wk_V_5,
        din1 => xk_V_4,
        din2 => grp_fu_1849_p2,
        dout => grp_fu_1849_p3);

    lms_mac_muladd_16eOg_U7 : component lms_mac_muladd_16eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => wk_V_6,
        din1 => xk_V_5,
        din2 => grp_fu_1858_p2,
        dout => grp_fu_1858_p3);

    lms_mul_mul_16s_1bkb_U8 : component lms_mul_mul_16s_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 14,
        dout_WIDTH => 30)
    port map (
        din0 => wk_V_7,
        din1 => xk_V_6,
        dout => r_V_5_7_i_fu_1868_p2);

    lms_mac_muladd_20fYi_U9 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1875_p0,
        din1 => xn_V,
        din2 => grp_fu_1875_p2,
        dout => grp_fu_1875_p3);

    lms_mac_muladd_20fYi_U10 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1884_p0,
        din1 => xk_V_0,
        din2 => grp_fu_1884_p2,
        dout => grp_fu_1884_p3);

    lms_mac_muladd_20fYi_U11 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1893_p0,
        din1 => xk_V_1,
        din2 => grp_fu_1893_p2,
        dout => grp_fu_1893_p3);

    lms_mac_muladd_20fYi_U12 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1902_p0,
        din1 => xk_V_2,
        din2 => grp_fu_1902_p2,
        dout => grp_fu_1902_p3);

    lms_mac_muladd_20fYi_U13 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1911_p0,
        din1 => xk_V_3,
        din2 => grp_fu_1911_p2,
        dout => grp_fu_1911_p3);

    lms_mac_muladd_20fYi_U14 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1920_p0,
        din1 => xk_V_4,
        din2 => grp_fu_1920_p2,
        dout => grp_fu_1920_p3);

    lms_mac_muladd_20fYi_U15 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1929_p0,
        din1 => xk_V_5,
        din2 => grp_fu_1929_p2,
        dout => grp_fu_1929_p3);

    lms_mac_muladd_20fYi_U16 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1938_p0,
        din1 => xk_V_6,
        din2 => grp_fu_1938_p2,
        dout => grp_fu_1938_p3);

    lms_mac_muladd_20fYi_U17 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1947_p0,
        din1 => xk_V_7,
        din2 => grp_fu_1947_p2,
        dout => grp_fu_1947_p3);

    lms_mac_muladd_20fYi_U18 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1955_p0,
        din1 => xk_V_8,
        din2 => grp_fu_1955_p2,
        dout => grp_fu_1955_p3);

    lms_mac_muladd_20fYi_U19 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1963_p0,
        din1 => xk_V_9,
        din2 => grp_fu_1963_p2,
        dout => grp_fu_1963_p3);

    lms_mac_muladd_20fYi_U20 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1971_p0,
        din1 => xk_V_10,
        din2 => grp_fu_1971_p2,
        dout => grp_fu_1971_p3);

    lms_mac_muladd_20fYi_U21 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1979_p0,
        din1 => xk_V_11,
        din2 => grp_fu_1979_p2,
        dout => grp_fu_1979_p3);

    lms_mac_muladd_20fYi_U22 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1987_p0,
        din1 => xk_V_12,
        din2 => grp_fu_1987_p2,
        dout => grp_fu_1987_p3);

    lms_mac_muladd_20fYi_U23 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_1995_p0,
        din1 => xk_V_13,
        din2 => grp_fu_1995_p2,
        dout => grp_fu_1995_p3);

    lms_mac_muladd_20fYi_U24 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2003_p0,
        din1 => xk_V_14,
        din2 => grp_fu_2003_p2,
        dout => grp_fu_2003_p3);

    lms_mac_muladd_20fYi_U25 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2011_p0,
        din1 => xk_V_15,
        din2 => grp_fu_2011_p2,
        dout => grp_fu_2011_p3);

    lms_mac_muladd_20fYi_U26 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2019_p0,
        din1 => xk_V_16,
        din2 => grp_fu_2019_p2,
        dout => grp_fu_2019_p3);

    lms_mac_muladd_20fYi_U27 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2027_p0,
        din1 => xk_V_17,
        din2 => grp_fu_2027_p2,
        dout => grp_fu_2027_p3);

    lms_mac_muladd_20fYi_U28 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2035_p0,
        din1 => xk_V_18,
        din2 => grp_fu_2035_p2,
        dout => grp_fu_2035_p3);

    lms_mac_muladd_20fYi_U29 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2043_p0,
        din1 => xk_V_19,
        din2 => grp_fu_2043_p2,
        dout => grp_fu_2043_p3);

    lms_mac_muladd_20fYi_U30 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2051_p0,
        din1 => xk_V_20,
        din2 => grp_fu_2051_p2,
        dout => grp_fu_2051_p3);

    lms_mac_muladd_20fYi_U31 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2059_p0,
        din1 => xk_V_21,
        din2 => grp_fu_2059_p2,
        dout => grp_fu_2059_p3);

    lms_mac_muladd_20fYi_U32 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2067_p0,
        din1 => xk_V_22,
        din2 => grp_fu_2067_p2,
        dout => grp_fu_2067_p3);

    lms_mac_muladd_20fYi_U33 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2075_p0,
        din1 => xk_V_23,
        din2 => grp_fu_2075_p2,
        dout => grp_fu_2075_p3);

    lms_mac_muladd_20fYi_U34 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2083_p0,
        din1 => xk_V_24,
        din2 => grp_fu_2083_p2,
        dout => grp_fu_2083_p3);

    lms_mac_muladd_20fYi_U35 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2091_p0,
        din1 => xk_V_25,
        din2 => grp_fu_2091_p2,
        dout => grp_fu_2091_p3);

    lms_mac_muladd_20fYi_U36 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2099_p0,
        din1 => xk_V_26,
        din2 => grp_fu_2099_p2,
        dout => grp_fu_2099_p3);

    lms_mac_muladd_20fYi_U37 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2107_p0,
        din1 => xk_V_27,
        din2 => grp_fu_2107_p2,
        dout => grp_fu_2107_p3);

    lms_mac_muladd_20fYi_U38 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2115_p0,
        din1 => xk_V_28,
        din2 => grp_fu_2115_p2,
        dout => grp_fu_2115_p3);

    lms_mac_muladd_20fYi_U39 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2123_p0,
        din1 => xk_V_29,
        din2 => grp_fu_2123_p2,
        dout => grp_fu_2123_p3);

    lms_mac_muladd_20fYi_U40 : component lms_mac_muladd_20fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 14,
        din2_WIDTH => 36,
        dout_WIDTH => 36)
    port map (
        din0 => grp_fu_2131_p0,
        din1 => xk_V_30,
        din2 => grp_fu_2131_p2,
        dout => grp_fu_2131_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    r_V_1_cast_reg_2154(33 downto 3) <= r_V_1_cast_fu_568_p1(33 downto 3);
                r_V_5_7_i_reg_2144 <= r_V_5_7_i_fu_1868_p2;
                tmp_11_reg_2149 <= grp_fu_1858_p3(30 downto 18);
                xk_V_6_load_reg_2139 <= xk_V_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                wk_V_0 <= grp_fu_1875_p3(35 downto 20);
                wk_V_1 <= grp_fu_1884_p3(35 downto 20);
                wk_V_2 <= grp_fu_1893_p3(35 downto 20);
                wk_V_3 <= grp_fu_1902_p3(35 downto 20);
                wk_V_4 <= grp_fu_1911_p3(35 downto 20);
                wk_V_5 <= grp_fu_1920_p3(35 downto 20);
                wk_V_6 <= grp_fu_1929_p3(35 downto 20);
                wk_V_7 <= grp_fu_1938_p3(35 downto 20);
                xk_V_0 <= xn_V;
                xk_V_1 <= xk_V_0;
                xk_V_2 <= xk_V_1;
                xk_V_3 <= xk_V_2;
                xk_V_4 <= xk_V_3;
                xk_V_5 <= xk_V_4;
                xk_V_6 <= xk_V_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                wk_V_10 <= grp_fu_1963_p3(35 downto 20);
                wk_V_11 <= grp_fu_1971_p3(35 downto 20);
                wk_V_12 <= grp_fu_1979_p3(35 downto 20);
                wk_V_13 <= grp_fu_1987_p3(35 downto 20);
                wk_V_14 <= grp_fu_1995_p3(35 downto 20);
                wk_V_15 <= grp_fu_2003_p3(35 downto 20);
                wk_V_16 <= grp_fu_2011_p3(35 downto 20);
                wk_V_17 <= grp_fu_2019_p3(35 downto 20);
                wk_V_18 <= grp_fu_2027_p3(35 downto 20);
                wk_V_19 <= grp_fu_2035_p3(35 downto 20);
                wk_V_20 <= grp_fu_2043_p3(35 downto 20);
                wk_V_21 <= grp_fu_2051_p3(35 downto 20);
                wk_V_22 <= grp_fu_2059_p3(35 downto 20);
                wk_V_23 <= grp_fu_2067_p3(35 downto 20);
                wk_V_24 <= grp_fu_2075_p3(35 downto 20);
                wk_V_25 <= grp_fu_2083_p3(35 downto 20);
                wk_V_26 <= grp_fu_2091_p3(35 downto 20);
                wk_V_27 <= grp_fu_2099_p3(35 downto 20);
                wk_V_28 <= grp_fu_2107_p3(35 downto 20);
                wk_V_29 <= grp_fu_2115_p3(35 downto 20);
                wk_V_30 <= grp_fu_2123_p3(35 downto 20);
                wk_V_31 <= grp_fu_2131_p3(35 downto 20);
                wk_V_8 <= grp_fu_1947_p3(35 downto 20);
                wk_V_9 <= grp_fu_1955_p3(35 downto 20);
                xk_V_10 <= xk_V_9;
                xk_V_11 <= xk_V_10;
                xk_V_12 <= xk_V_11;
                xk_V_13 <= xk_V_12;
                xk_V_14 <= xk_V_13;
                xk_V_15 <= xk_V_14;
                xk_V_16 <= xk_V_15;
                xk_V_17 <= xk_V_16;
                xk_V_18 <= xk_V_17;
                xk_V_19 <= xk_V_18;
                xk_V_20 <= xk_V_19;
                xk_V_21 <= xk_V_20;
                xk_V_22 <= xk_V_21;
                xk_V_23 <= xk_V_22;
                xk_V_24 <= xk_V_23;
                xk_V_25 <= xk_V_24;
                xk_V_26 <= xk_V_25;
                xk_V_27 <= xk_V_26;
                xk_V_28 <= xk_V_27;
                xk_V_29 <= xk_V_28;
                xk_V_30 <= xk_V_29;
                xk_V_7 <= xk_V_6_load_reg_2139;
                xk_V_8 <= xk_V_7;
                xk_V_9 <= xk_V_8;
            end if;
        end if;
    end process;
    r_V_1_cast_reg_2154(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1831_p2 <= (tmp_2_fu_393_p4 & ap_const_lv18_0);
    grp_fu_1840_p2 <= (tmp_4_fu_418_p4 & ap_const_lv18_0);
    grp_fu_1849_p2 <= (tmp_5_fu_443_p4 & ap_const_lv18_0);
    grp_fu_1858_p2 <= (tmp_9_fu_468_p4 & ap_const_lv18_0);
    grp_fu_1875_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1875_p2 <= (lhs_V_2_fu_576_p1 & ap_const_lv20_0);
    grp_fu_1884_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1884_p2 <= (lhs_V_2_1_fu_603_p1 & ap_const_lv20_0);
    grp_fu_1893_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1893_p2 <= (lhs_V_2_2_fu_630_p1 & ap_const_lv20_0);
    grp_fu_1902_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1902_p2 <= (lhs_V_2_3_fu_657_p1 & ap_const_lv20_0);
    grp_fu_1911_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1911_p2 <= (lhs_V_2_4_fu_684_p1 & ap_const_lv20_0);
    grp_fu_1920_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1920_p2 <= (lhs_V_2_5_fu_711_p1 & ap_const_lv20_0);
    grp_fu_1929_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1929_p2 <= (lhs_V_2_6_fu_738_p1 & ap_const_lv20_0);
    grp_fu_1938_p0 <= r_V_1_cast_fu_568_p1(20 - 1 downto 0);
    grp_fu_1938_p2 <= (lhs_V_2_7_fu_765_p1 & ap_const_lv20_0);
    grp_fu_1947_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1947_p2 <= (wk_V_8 & ap_const_lv20_0);
    grp_fu_1955_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1955_p2 <= (wk_V_9 & ap_const_lv20_0);
    grp_fu_1963_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1963_p2 <= (wk_V_10 & ap_const_lv20_0);
    grp_fu_1971_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1971_p2 <= (wk_V_11 & ap_const_lv20_0);
    grp_fu_1979_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1979_p2 <= (wk_V_12 & ap_const_lv20_0);
    grp_fu_1987_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1987_p2 <= (wk_V_13 & ap_const_lv20_0);
    grp_fu_1995_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_1995_p2 <= (wk_V_14 & ap_const_lv20_0);
    grp_fu_2003_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2003_p2 <= (wk_V_15 & ap_const_lv20_0);
    grp_fu_2011_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2011_p2 <= (wk_V_16 & ap_const_lv20_0);
    grp_fu_2019_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2019_p2 <= (wk_V_17 & ap_const_lv20_0);
    grp_fu_2027_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2027_p2 <= (wk_V_18 & ap_const_lv20_0);
    grp_fu_2035_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2035_p2 <= (wk_V_19 & ap_const_lv20_0);
    grp_fu_2043_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2043_p2 <= (wk_V_20 & ap_const_lv20_0);
    grp_fu_2051_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2051_p2 <= (wk_V_21 & ap_const_lv20_0);
    grp_fu_2059_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2059_p2 <= (wk_V_22 & ap_const_lv20_0);
    grp_fu_2067_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2067_p2 <= (wk_V_23 & ap_const_lv20_0);
    grp_fu_2075_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2075_p2 <= (wk_V_24 & ap_const_lv20_0);
    grp_fu_2083_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2083_p2 <= (wk_V_25 & ap_const_lv20_0);
    grp_fu_2091_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2091_p2 <= (wk_V_26 & ap_const_lv20_0);
    grp_fu_2099_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2099_p2 <= (wk_V_27 & ap_const_lv20_0);
    grp_fu_2107_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2107_p2 <= (wk_V_28 & ap_const_lv20_0);
    grp_fu_2115_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2115_p2 <= (wk_V_29 & ap_const_lv20_0);
    grp_fu_2123_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2123_p2 <= (wk_V_30 & ap_const_lv20_0);
    grp_fu_2131_p0 <= r_V_1_cast_reg_2154(20 - 1 downto 0);
    grp_fu_2131_p2 <= (wk_V_31 & ap_const_lv20_0);
    lhs_V_2_1_fu_603_p1 <= wk_V_1;
    lhs_V_2_2_fu_630_p1 <= wk_V_2;
    lhs_V_2_3_fu_657_p1 <= wk_V_3;
    lhs_V_2_4_fu_684_p1 <= wk_V_4;
    lhs_V_2_5_fu_711_p1 <= wk_V_5;
    lhs_V_2_6_fu_738_p1 <= wk_V_6;
    lhs_V_2_7_fu_765_p1 <= wk_V_7;
    lhs_V_2_fu_576_p1 <= wk_V_0;
    lhs_V_3_1_i_fu_344_p3 <= (tmp_fu_335_p4 & ap_const_lv18_0);
    lhs_V_3_7_i_fu_502_p3 <= (tmp_10_fu_493_p4 & ap_const_lv18_0);
        lhs_V_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dn_V),17));

        r_V_1_cast_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_560_p3),34));

    r_V_fu_560_p3 <= (ret_V_fu_554_p2 & ap_const_lv3_0);
    ret_V_7_i_cast_fu_1037_p2 <= std_logic_vector(signed(tmp_7_fu_1027_p1) + signed(tmp_8_fu_1030_p3));
    ret_V_7_i_fu_522_p2 <= std_logic_vector(unsigned(lhs_V_3_7_i_fu_502_p3) + unsigned(rhs_V_7_i_cast_fu_510_p1));
    ret_V_fu_554_p2 <= std_logic_vector(signed(lhs_V_fu_528_p1) - signed(rhs_V_1_cast_fu_550_p1));
        rhs_V_1_cast_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_542_p3),17));

        rhs_V_7_i_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_7_i_fu_1868_p2),32));

    rhs_V_fu_542_p3 <= (tmp_12_fu_532_p4 & ap_const_lv2_0);
    tmp_10_fu_493_p4 <= grp_fu_1858_p3(31 downto 18);
    tmp_12_fu_532_p4 <= ret_V_7_i_fu_522_p2(31 downto 18);
    tmp_13_fu_1787_p4 <= ret_V_7_i_cast_fu_1037_p2(30 downto 18);
    tmp_1_fu_373_p3 <= (tmp_3_fu_356_p4 & ap_const_lv18_0);
    tmp_2_fu_393_p4 <= grp_fu_1822_p3(31 downto 18);
    tmp_3_fu_356_p4 <= grp_fu_1813_p3(30 downto 18);
    tmp_4_fu_418_p4 <= grp_fu_1831_p3(31 downto 18);
    tmp_5_fu_443_p4 <= grp_fu_1840_p3(31 downto 18);
        tmp_7_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_7_i_reg_2144),31));

    tmp_8_fu_1030_p3 <= (tmp_11_reg_2149 & ap_const_lv18_0);
    tmp_9_fu_468_p4 <= grp_fu_1849_p3(31 downto 18);
    tmp_fu_335_p4 <= r_V_5_i_fu_1806_p2(29 downto 18);
    y_V <= (tmp_13_fu_1787_p4 & ap_const_lv1_0);

    y_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_V_ap_vld <= ap_const_logic_1;
        else 
            y_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
